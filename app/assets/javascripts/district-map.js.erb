var map = L.map('map', { scrollWheelZoom: false });

var OpenStreetMap_BlackAndWhite = L.tileLayer('http://{s}.tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png', {
	maxZoom: 18,
  attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
}).addTo(map);

var tiles = L.geoJson($('#map').data('geo'), {
	style: style,
	onEachFeature: onEachFeature
}).addTo(map);

var map_bounds = tiles.getBounds();
map.fitBounds(map_bounds);

function style(feature) {
  return {
    weight: 2,
    opacity: 1,
    color: getColor($('#party').data('party')),
    fillOpacity: 0.5
  };
}

function onEachFeature(feature, layer) {
	layer.on({
		mouseover: highlightFeature,
		mouseout: resetHighlight,
		click: zoomToFeature
	});
}

function getColor(party) {
	return party == 'NDP' ? '#FF5800' :
				 party == 'Conservative' ? '#002395' :
				 party == 'Liberal' ? '#ed2e38' :
				 party == 'Bloc Québécois' ? '#0088CE' :
				 party == 'Green Party' ? '#427730' :
				        	 '#7570b3' ;
}

function highlightFeature(e) {
	var layer = e.target;

	layer.setStyle({
		fillOpacity: 0.7
	});

	if (!L.Browser.ie && !L.Browser.opera) {
    layer.bringToFront();
  }
}

function resetHighlight(e) {
    tiles.resetStyle(e.target);
}

function zoomToFeature(e) {
    map.fitBounds(e.target.getBounds());
}
